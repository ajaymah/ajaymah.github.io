{"version":3,"sources":["webpack:///src/app/core/http-request.service.ts","webpack:///src/app/user/user-routing.module.ts","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/app/user/user.module.ts","webpack:///src/app/user/user.service.ts","webpack:///src/environments/http-config.ts","webpack:///src/environments/lang.enum.ts"],"names":["HttpRequestService","http","httpOptions","headers","body","url","get","providedIn","routes","path","component","redirectTo","pathMatch","UserRoutingModule","forChild","imports","exports","UserComponent","userService","loading","userQString","limit","year","launchSuccess","landSuccess","userList","userListCount","launchYearList","textLang","getUsersList","Qstr1","Qstr2","Qstr3","finalQstr","usersList","subscribe","res","onSuccessUserList","error","length","val","selector","templateUrl","styleUrls","UserModule","declarations","UserService","HttpRequest","qStr","ApiUrl","launches","Urls","apiUrl"],"mappings":"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","file":"user-user-module-es5.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {HttpHeaders} from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpRequestService {\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    }),\r\n    body: null\r\n  };\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  get(url) {\r\n    return this.http.get<any>(url, this.httpOptions);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './user.component';\n\nconst routes: Routes = [\n  { path: '', component: UserComponent }, \n  { path: '', redirectTo: '', pathMatch: 'full' }\n  ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule {\n\n }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './user.service';\nimport { textLang } from './../../environments/lang.enum';\n@Component({\n    selector: 'app-user',\n    templateUrl: './user.component.html',\n    styleUrls: ['./user.component.css'],\n})\nexport class UserComponent implements OnInit {\n    loading = false;\n    userQString = {\n        limit: 100,\n        year: '',\n        launchSuccess: '',\n        landSuccess: '',\n    };\n    userList = [];\n    userListCount: number = 0;\n    launchYearList = [2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2017, 2018, 2019, 2020];\n    launchSuccess = ['true', 'false'];\n    textLang = textLang;\n    constructor(private userService: UserService) {}\n    ngOnInit(): void {\n        this.getUsersList();\n    }\n    getUsersList() {\n        this.loading = true;\n        let Qstr1 = '';\n        let Qstr2 = '';\n        let Qstr3 = '';\n        let finalQstr = '';\n        if (this.userQString.year) {\n            Qstr1 = `&launch_year=${this.userQString.year}`;\n        }\n        if (this.userQString.launchSuccess) {\n            Qstr2 = `&launch_success=${this.userQString.launchSuccess}`;\n        }\n        if (this.userQString.landSuccess) {\n            Qstr3 = `&land_success=${this.userQString.landSuccess}`;\n        }\n        finalQstr = Qstr1 + Qstr2 + Qstr3;\n        this.userService.usersList(`?limit=${this.userQString.limit}${finalQstr}`).subscribe(\n            (res) => {\n                this.onSuccessUserList(res);\n            },\n            (error) => {}\n        );\n    }\n    onSuccessUserList(res) {\n        this.userList = res;\n        this.userListCount = res.length;\n        this.loading = false;\n    }\n    searchbyYear(val) {\n        if (this.userQString.year == val) {\n            this.userQString.year = '';\n        } else {\n            this.userQString.year = val;\n        }\n        this.getUsersList();\n    }\n    searchbySuccessLaunch(val) {\n        if (this.userQString.launchSuccess == val) {\n            this.userQString.launchSuccess = '';\n        } else {\n            this.userQString.launchSuccess = val;\n        }\n        this.getUsersList();\n    }\n    searchbySuccessLand(val) {\n        if (this.userQString.landSuccess == val) {\n            this.userQString.landSuccess = '';\n        } else {\n            this.userQString.landSuccess = val;\n        }\n        this.getUsersList();\n    }\n}\n","\n<div class=\"pageWrapper\">\n    <div class=\"breadCrumb\">\n        <h2>{{textLang[\"headingPage\"]}}</h2>\n    </div>\n    <div class=\"aside\">\n        <div class=\"blockSection\">\n            \n            <div class=\"head\">\n                <h3>{{textLang[\"Filters\"]}}</h3>\n                <span class=\"subHead\" title=\"{{textLang['LaunchYear']}}\">\n                    {{textLang[\"LaunchYear\"]}}\n                </span>\n            </div>\n            <div class=\"content\">\n                <ul class=\"tagsList\">\n                    <li *ngFor=\"let data of launchYearList\"><a href=\"javascript:void(0)\" (click)=\"searchbyYear(data)\" [ngClass]=\"userQString.year == data ? 'tags active' : 'tags'\" title=\"{{data}}\">{{data}}</a></li>                   \n                </ul>\n            </div>\n        </div>\n        <div class=\"blockSection\">\n            <div class=\"head\">\n                <span class=\"subHead\" title=\"{{textLang['SuccessfulLunch']}}\">\n                    {{textLang[\"SuccessfulLunch\"]}}\n                </span>\n            </div>\n            <div class=\"content\">\n                <ul class=\"tagsList\">\n                    <li *ngFor=\"let data of launchSuccess\"><a href=\"javascript:void(0)\" (click)=\"searchbySuccessLaunch(data)\" [ngClass]=\"userQString.launchSuccess == data ? 'tags active' : 'tags'\" title=\"{{data}}\">{{data}}</a></li>                   \n                </ul>\n            </div>\n        </div>\n        <div class=\"blockSection\">\n            <div class=\"head\">\n                <span class=\"subHead\" title=\"{{textLang['SuccessfulLanding']}}\">                    \n                    {{textLang[\"SuccessfulLanding\"]}}\n                </span>\n            </div>\n            <div class=\"content\">\n                <ul class=\"tagsList\">\n                    <li *ngFor=\"let data of launchSuccess\"><a href=\"javascript:void(0)\" (click)=\"searchbySuccessLand(data)\" [ngClass]=\"userQString.landSuccess == data ? 'tags active' : 'tags'\" title=\"{{data}}\">{{data}}</a></li>                   \n                </ul>\n            </div>\n        </div>\n    </div>\n    <section class=\"main\">\n        <div class=\"whiteWraper\">\n        <div class=\"contentListData\">\n            <ul class=\"userList\">\n                <li *ngFor=\"let data of userList\">\n                    <div class=\"productWraper\">\n                    <div class=\"imageSection\"><img src=\"{{data.links.mission_patch_small}}\" alt=\"{{data.mission_name}}\" /></div>\n                    <p class=\"productDetail\" *ngIf=\"data.mission_name\">\n                        <a href=\"javascript:void(0)\" class=\"name\" >{{data.mission_name}} #{{data.flight_number}}</a>\n                    </p>\n                    <p class=\"productDetail\" *ngIf=\"data.mission_id.length > 0\">\n                        <strong>{{textLang[\"missionIds\"]}}: </strong> <br/>\n                        <em class=\"blueListlink\" *ngFor=\"let ids of data.mission_id\">&bull; {{ids}} <br/></em>\n                    </p>\n                    <p class=\"productDetail\" *ngIf=\"data.launch_year\"><strong>{{textLang[\"LaunchYear\"]}}: </strong> <em class=\"blueListlink\">{{data.launch_year}}</em></p>\n\n                    <p class=\"productDetail\"><strong> {{textLang[\"SuccessfulLunch\"]}}: </strong> <em class=\"blueListlink\">{{data.launch_success}}</em></p>\n                    <p *ngIf=\"data.rocket.first_stage.cores[0].land_success !== null\" class=\"productDetail\"><strong> {{textLang[\"SuccessfulLanding\"]}}: </strong> <em class=\"blueListlink\">{{data.rocket.first_stage.cores[0].land_success}}</em></p>\n                </div>\n                </li>                   \n            </ul>\n            <div class=\"message error\" *ngIf=\"(userListCount == 0 && !loading)\">{{textLang[\"noRecordFound\"]}}</div>\n        </div>\n        </div>\n    </section>\n    <div class=\"breadCrumb copyRight txtCenter\"><h2>Developed by:</h2> {{\"Ajay Kumar\"}}</div>\n</div>\n<div class=\"mainLoader\" *ngIf=\"loading\">\n   <img src=\"../../assets/images/loder.gif\"/>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserComponent } from './user.component';\nimport { UserRoutingModule } from './user-routing.module';\n\n\n@NgModule({\n  declarations: [UserComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule\n  ]\n})\nexport class UserModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {HttpRequestService} from './../core/http-request.service';\nimport { Urls } from './../../environments/http-config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(\n    private http: HttpClient,\n    private HttpRequest:HttpRequestService\n  ) { }\n  usersList(qStr) {\n        return this.HttpRequest.get(`${Urls.ApiUrl}${Urls.launches}${qStr}`);\n  }\n}\n","import { environment } from \"./environment\";\r\n\r\nexport const Urls = {\r\n  ApiUrl: environment.apiUrl,  \r\n  launches:'launches'\r\n};\r\n","export enum textLang {\r\n    headingPage ='SpaceX Launch Programs',\r\n    Filters = 'Filters',\r\n    LaunchYear = 'Launch Year',\r\n    SuccessfulLunch = 'Successful launch',\r\n    SuccessfulLanding = 'Successful Landing',\r\n    missionIds = 'Mission Ids',\r\n    noRecordFound = 'No Record Found',\r\n}\r\n"]}